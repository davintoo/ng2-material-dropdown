/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './ng2-dropdown';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/query_list';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from './style.css.shim.ngstyle';
export class Wrapper_Ng2Dropdown {
  /*private*/ _eventHandler:Function;
  context:import0.Ng2Dropdown;
  /*private*/ _changed:boolean;
  subscription0:any;
  subscription1:any;
  subscription2:any;
  subscription3:any;
  constructor() {
    this._changed = false;
    this.context = new import0.Ng2Dropdown();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
    (this.subscription2 && this.subscription2.unsubscribe());
    (this.subscription3 && this.subscription3.unsubscribe());
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    if ((eventName == 'window:scroll')) {
      const pd_sub_0:any = ((<any>this.context.scrollListener()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean,emit2:boolean,emit3:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.onItemClicked.subscribe(_eventHandler.bind(view,'onItemClicked'))); }
    if (emit1) { (this.subscription1 = this.context.onItemSelected.subscribe(_eventHandler.bind(view,'onItemSelected'))); }
    if (emit2) { (this.subscription2 = this.context.onShow.subscribe(_eventHandler.bind(view,'onShow'))); }
    if (emit3) { (this.subscription3 = this.context.onHide.subscribe(_eventHandler.bind(view,'onHide'))); }
  }
}
var renderType_Ng2Dropdown_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_Ng2Dropdown_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.Ng2Dropdown>;
  _Ng2Dropdown_0_3:Wrapper_Ng2Dropdown;
  _query_Ng2DropdownButton_0_0:import5.QueryList<any>;
  _query_Ng2DropdownMenu_0_1:import5.QueryList<any>;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_Ng2Dropdown_Host0,renderType_Ng2Dropdown_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'ng2-dropdown',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_Ng2Dropdown0(this.viewUtils,this,0,this._el_0);
    this._Ng2Dropdown_0_3 = new Wrapper_Ng2Dropdown();
    this._query_Ng2DropdownButton_0_0 = new import5.QueryList<any>();
    this._query_Ng2DropdownMenu_0_1 = new import5.QueryList<any>();
    this._query_Ng2DropdownButton_0_0.reset(([] as any[]));
    this._Ng2Dropdown_0_3.context.button = this._query_Ng2DropdownButton_0_0.first;
    this._query_Ng2DropdownMenu_0_1.reset(([] as any[]));
    this._Ng2Dropdown_0_3.context.menu = this._query_Ng2DropdownMenu_0_1.first;
    this.compView_0.create(this._Ng2Dropdown_0_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'scroll','window'),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._Ng2Dropdown_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.Ng2Dropdown) && (0 === requestNodeIndex))) { return this._Ng2Dropdown_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._Ng2Dropdown_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._Ng2Dropdown_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 1))) {  }
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.compView_0.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._Ng2Dropdown_0_3.handleEvent(eventName,$event) && result);
    return result;
  }
}
export const Ng2DropdownNgFactory:import8.ComponentFactory<import0.Ng2Dropdown> = new import8.ComponentFactory<import0.Ng2Dropdown>('ng2-dropdown',View_Ng2Dropdown_Host0,import0.Ng2Dropdown);
const styles_Ng2Dropdown:any[] = [import9.styles];
var renderType_Ng2Dropdown:import2.RenderComponentType = import3.createRenderComponentType('',2,import4.ViewEncapsulation.Emulated,styles_Ng2Dropdown,{});
export class View_Ng2Dropdown0 extends import1.AppView<import0.Ng2Dropdown> {
  _el_0:any;
  _text_1:any;
  _text_2:any;
  _text_3:any;
  _text_4:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_Ng2Dropdown0,renderType_Ng2Dropdown,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'class','ng2-dropdown-container'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this.projectNodes(this._el_0,0);
    this._text_2 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this.projectNodes(this._el_0,1);
    this._text_3 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._text_4 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._text_2,
      this._text_3,
      this._text_4
    ]
    ),(null as any));
    return (null as any);
  }
}